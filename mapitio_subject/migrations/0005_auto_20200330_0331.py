# Generated by Django 3.0.4 on 2020-03-30 00:31

import django.core.validators
from django.db import migrations, models
import django_crypto_fields.fields.encrypted_char_field
import django_crypto_fields.fields.firstname_field
import django_crypto_fields.fields.lastname_field
import edc_consent.validators
import edc_model_fields.fields.date_estimated


class Migration(migrations.Migration):

    dependencies = [
        ("mapitio_subject", "0004_auto_20200329_0438"),
    ]

    operations = [
        migrations.RemoveField(model_name="enrolment", name="hospital_identifier",),
        migrations.RemoveField(
            model_name="historicalenrolment", name="hospital_identifier",
        ),
        migrations.AddField(
            model_name="enrolment",
            name="clinic_type",
            field=models.CharField(
                choices=[
                    ("hiv_clinic", "HIV Clinic"),
                    ("ncd_clinic", "NCD Clinic"),
                    ("integrated_clinic", "Integrated Clinic"),
                ],
                default="integrated_clinic",
                editable=False,
                max_length=25,
                verbose_name="From which type of clinic was the patient selected",
            ),
        ),
        migrations.AddField(
            model_name="enrolment",
            name="enrolment_identifier",
            field=models.CharField(
                blank=True,
                editable=False,
                max_length=50,
                unique=True,
                verbose_name="Enrolment ID",
            ),
        ),
        migrations.AddField(
            model_name="enrolment",
            name="first_name",
            field=django_crypto_fields.fields.firstname_field.FirstnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
            ),
        ),
        migrations.AddField(
            model_name="enrolment",
            name="guardian_name",
            field=django_crypto_fields.fields.lastname_field.LastnameField(
                blank=True,
                help_text="Required only if participant is a minor.<BR>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[edc_consent.validators.FullNameValidator()],
                verbose_name="Guardian's last and first name",
            ),
        ),
        migrations.AddField(
            model_name="enrolment",
            name="last_name",
            field=django_crypto_fields.fields.lastname_field.LastnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
                verbose_name="Surname",
            ),
        ),
        migrations.AddField(
            model_name="enrolment",
            name="slug",
            field=models.CharField(
                db_index=True,
                default="",
                editable=False,
                help_text="a field used for quick search",
                max_length=250,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="enrolment",
            name="subject_type",
            field=models.CharField(default="subject", max_length=25),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="clinic_type",
            field=models.CharField(
                choices=[
                    ("hiv_clinic", "HIV Clinic"),
                    ("ncd_clinic", "NCD Clinic"),
                    ("integrated_clinic", "Integrated Clinic"),
                ],
                default="integrated_clinic",
                editable=False,
                max_length=25,
                verbose_name="From which type of clinic was the patient selected",
            ),
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="enrolment_identifier",
            field=models.CharField(
                blank=True,
                db_index=True,
                editable=False,
                max_length=50,
                verbose_name="Enrolment ID",
            ),
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="first_name",
            field=django_crypto_fields.fields.firstname_field.FirstnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
            ),
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="guardian_name",
            field=django_crypto_fields.fields.lastname_field.LastnameField(
                blank=True,
                help_text="Required only if participant is a minor.<BR>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[edc_consent.validators.FullNameValidator()],
                verbose_name="Guardian's last and first name",
            ),
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="last_name",
            field=django_crypto_fields.fields.lastname_field.LastnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
                verbose_name="Surname",
            ),
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="slug",
            field=models.CharField(
                db_index=True,
                default="",
                editable=False,
                help_text="a field used for quick search",
                max_length=250,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalenrolment",
            name="subject_type",
            field=models.CharField(default="subject", max_length=25),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="enrolment",
            name="dob",
            field=models.DateField(null=True, verbose_name="Date of birth"),
        ),
        migrations.AlterField(
            model_name="enrolment",
            name="gender",
            field=models.CharField(
                choices=[("M", "Male"), ("F", "Female"), ("U", "Undetermined")],
                max_length=1,
                null=True,
                verbose_name="Gender",
            ),
        ),
        migrations.AlterField(
            model_name="enrolment",
            name="identity_type",
            field=models.CharField(
                choices=[
                    ("hospital_no", "Hospital Identifier"),
                    ("national_identifier", "National Identifier"),
                    ("DRIVERS", "Driver's License"),
                    ("PASSPORT", "Passport"),
                    ("OTHER", "Other"),
                ],
                default="hospital_no",
                max_length=25,
                verbose_name="What type of identity number is this?",
            ),
        ),
        migrations.AlterField(
            model_name="enrolment",
            name="initials",
            field=django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure initials consist of letters only in upper case, no spaces.",
                        regex="^[A-Z]{2,3}$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="enrolment",
            name="is_dob_estimated",
            field=edc_model_fields.fields.date_estimated.IsDateEstimatedField(
                choices=[
                    ("-", "No"),
                    ("D", "Yes, estimated the Day"),
                    ("MD", "Yes, estimated Month and Day"),
                    ("YMD", "Yes, estimated Year, Month and Day"),
                ],
                help_text="If the exact date is not known, please indicate which part of the date is estimated.",
                max_length=25,
                null=True,
                verbose_name="Is date of birth estimated?",
            ),
        ),
        migrations.AlterField(
            model_name="enrolment",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="historicalenrolment",
            name="dob",
            field=models.DateField(null=True, verbose_name="Date of birth"),
        ),
        migrations.AlterField(
            model_name="historicalenrolment",
            name="gender",
            field=models.CharField(
                choices=[("M", "Male"), ("F", "Female"), ("U", "Undetermined")],
                max_length=1,
                null=True,
                verbose_name="Gender",
            ),
        ),
        migrations.AlterField(
            model_name="historicalenrolment",
            name="identity_type",
            field=models.CharField(
                choices=[
                    ("hospital_no", "Hospital Identifier"),
                    ("national_identifier", "National Identifier"),
                    ("DRIVERS", "Driver's License"),
                    ("PASSPORT", "Passport"),
                    ("OTHER", "Other"),
                ],
                default="hospital_no",
                max_length=25,
                verbose_name="What type of identity number is this?",
            ),
        ),
        migrations.AlterField(
            model_name="historicalenrolment",
            name="initials",
            field=django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure initials consist of letters only in upper case, no spaces.",
                        regex="^[A-Z]{2,3}$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="historicalenrolment",
            name="is_dob_estimated",
            field=edc_model_fields.fields.date_estimated.IsDateEstimatedField(
                choices=[
                    ("-", "No"),
                    ("D", "Yes, estimated the Day"),
                    ("MD", "Yes, estimated Month and Day"),
                    ("YMD", "Yes, estimated Year, Month and Day"),
                ],
                help_text="If the exact date is not known, please indicate which part of the date is estimated.",
                max_length=25,
                null=True,
                verbose_name="Is date of birth estimated?",
            ),
        ),
        migrations.AlterField(
            model_name="historicalenrolment",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
    ]
